import { postData } from 'helpers/network';
import { API_ROOT, defaultErrorMessage } from 'constants/defaults';
import { checkResponse } from 'helpers/session';

export const loginRequest = () => ({
    type: 'LOG_IN_REQUEST',
});

export const loginSuccess = (email) => ({
    type: 'LOG_IN_SUCCESS',
    payload: { email },
});

export const loginFailure = (errorMessage = defaultErrorMessage) => ({
    type: 'LOG_IN_FAILURE',
    payload: { errorMessage },
    error: true,
});

export function logIn(params, cb) {

    return (dispatch) => {

        dispatch(loginRequest());

        return postData(`${API_ROOT}/validate`, params)
            .then((response) => {
                if (checkResponse(response)) {
                    dispatch(loginSuccess(params.email));
                    cb();
                } else {
                    dispatch(loginFailure(response.message));
                }
            })
            .catch((error) => {
                dispatch(loginFailure());
            });
    };
}

export function logOut() {
    return {
        type: 'LOG_OUT',
    };
}